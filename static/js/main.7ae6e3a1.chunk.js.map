{"version":3,"sources":["components/logicAct.js","components/Btn.js","App.js","reportWebVitals.js","index.js"],"names":["LogicAct","this","props","Good","Neutral","Bad","Math","round","Component","Btn","handleClick","target","type","name","value","onClick","App","state","elem","setState","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yNAEqBA,E,uKAEP,IAAD,EACwBC,KAAKC,MAAMA,MAAjCC,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IAEtB,OACI,gCACI,4CACKF,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAClC,gCACI,0CAAaF,KACb,uBACA,6CAAgBC,KAChB,uBACA,yCAAYC,KACZ,uBACA,2CAAcF,EAAOC,EAAUC,KAC/B,uBACA,wDAA2BC,KAAKC,MAAMJ,GAAQA,EAAOE,EAAMD,GAAW,KAAtE,UAGJ,gE,GArBkBI,aCAjBC,E,4MACjBC,YAAc,YAAe,IAAbC,EAAY,EAAZA,OACZ,EAAKT,MAAMQ,YAAYC,I,uDAIvB,OACI,gCACI,uDACA,wBAAQC,KAAO,SAASC,KAAO,OAAOC,MAASb,KAAKC,MAAMC,KAAMY,QAAWd,KAAKS,YAAhF,kBACA,wBAAQE,KAAO,SAASC,KAAO,UAAUC,MAASb,KAAKC,MAAME,QAASW,QAAWd,KAAKS,YAAtF,qBACA,wBAAQE,KAAO,SAASC,KAAO,MAAMC,MAASb,KAAKC,MAAMG,IAAKU,QAAWd,KAAKS,YAA9E,wB,GAXiBF,aCEZQ,E,4MACnBC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAACQ,GAAU,IAChBL,EAAeK,EAAfL,KAAMC,EAASI,EAATJ,MAEb,EAAKK,SAAL,eACIN,EAAOO,OAAON,GAAS,K,uDAM3B,OACA,gCACE,cAAC,EAAD,CAAKJ,YAAeT,KAAKS,YAAaP,KAAQF,KAAKgB,MAAMd,KAAMC,QAAWH,KAAKgB,MAAMb,QAASC,IAAOJ,KAAKgB,MAAMZ,MAChH,cAAC,EAAD,CAAUH,MAASD,KAAKgB,e,GApBGT,aCQlBa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.7ae6e3a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class LogicAct extends Component {\r\n\r\n    render() {\r\n        const {Good, Neutral, Bad} = this.props.props\r\n\r\n        return (\r\n            <div>\r\n                <h3>Statistics</h3>\r\n                    {Good > 0 || Neutral > 0 || Bad > 0 ? (\r\n                    <div>\r\n                        <span>Good: {Good}</span>\r\n                        <br/>\r\n                        <span>Neutral: {Neutral}</span>\r\n                        <br/>\r\n                        <span>Bad: {Bad}</span>\r\n                        <br/>\r\n                        <span>Total: {Good + Neutral + Bad}</span>\r\n                        <br/>\r\n                        <span> Positive feedback: {Math.round(Good / (Good + Bad + Neutral) * 100)}%</span>\r\n                    </div>\r\n                    ) : (\r\n                    <span>we dont have feedback</span>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Btn extends Component {\r\n    handleClick = ({target}) => {\r\n        this.props.handleClick(target)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>please leave feedback</h3>\r\n                <button type = 'button' name = 'Good' value = {this.props.Good} onClick = {this.handleClick}>Good</button>\r\n                <button type = 'button' name = 'Neutral' value = {this.props.Neutral} onClick = {this.handleClick}>Neutral</button>\r\n                <button type = 'button' name = 'Bad' value = {this.props.Bad} onClick = {this.handleClick}>Bad</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport LogicAct from './components/logicAct'\nimport Btn from './components/Btn'\n\nexport default class App extends Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0\n  }\n  \n  handleClick = (elem) => {\n    const {name, value} = elem\n\n    this.setState({\n       [name]: Number(value) + 1\n    })\n  }\n\n  render() {\n\n    return(\n    <div>\n      <Btn handleClick = {this.handleClick} Good = {this.state.Good} Neutral = {this.state.Neutral} Bad = {this.state.Bad}/>\n      <LogicAct props = {this.state} />\n    </div> \n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}